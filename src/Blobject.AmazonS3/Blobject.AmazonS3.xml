<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Blobject.AmazonS3</name>
    </assembly>
    <members>
        <member name="T:Blobject.AmazonS3.AmazonS3BlobClient">
            <inheritdoc />
        </member>
        <member name="M:Blobject.AmazonS3.AmazonS3BlobClient.#ctor(Blobject.AmazonS3.AwsSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Blobject.AmazonS3.AmazonS3BlobClient"/> class.
            </summary>
            <param name="awsSettings">Settings for <see cref="T:Blobject.AmazonS3.AmazonS3BlobClient"/>.</param>
        </member>
        <member name="M:Blobject.AmazonS3.AmazonS3BlobClient.Dispose(System.Boolean)">
            <summary>
            Dispose.
            </summary>
            <param name="disposing">Disposing.</param>
        </member>
        <member name="M:Blobject.AmazonS3.AmazonS3BlobClient.Dispose">
            <summary>
            Dispose.
            </summary>
        </member>
        <member name="M:Blobject.AmazonS3.AmazonS3BlobClient.ValidateConnectivity(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Blobject.AmazonS3.AmazonS3BlobClient.ListBuckets(System.Threading.CancellationToken)">
            <summary>
            List buckets available on the server.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>List of bucket names.</returns>
        </member>
        <member name="M:Blobject.AmazonS3.AmazonS3BlobClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Blobject.AmazonS3.AmazonS3BlobClient.GetStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Blobject.AmazonS3.AmazonS3BlobClient.GetMetadataAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Blobject.AmazonS3.AmazonS3BlobClient.WriteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Blobject.AmazonS3.AmazonS3BlobClient.WriteAsync(System.String,System.String,System.Byte[],System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Blobject.AmazonS3.AmazonS3BlobClient.WriteAsync(System.String,System.String,System.Int64,System.IO.Stream,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Blobject.AmazonS3.AmazonS3BlobClient.WriteManyAsync(System.Collections.Generic.List{Blobject.Core.WriteRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Blobject.AmazonS3.AmazonS3BlobClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Blobject.AmazonS3.AmazonS3BlobClient.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Blobject.AmazonS3.AmazonS3BlobClient.GenerateUrl(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Blobject.AmazonS3.AmazonS3BlobClient.Enumerate(Blobject.Core.EnumerationFilter)">
            <inheritdoc />
        </member>
        <member name="M:Blobject.AmazonS3.AmazonS3BlobClient.EnumerateAsync(Blobject.Core.EnumerationFilter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Blobject.AmazonS3.AmazonS3BlobClient.EmptyAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Blobject.AmazonS3.AwsSettings">
            <summary>
            Settings when using AWS S3 for storage.
            </summary>
        </member>
        <member name="P:Blobject.AmazonS3.AwsSettings.Endpoint">
            <summary>
            Override the AWS S3 endpoint (if using non-Amazon storage), otherwise leave null.
            Use the form http://localhost:8000/
            </summary>
        </member>
        <member name="P:Blobject.AmazonS3.AwsSettings.Ssl">
            <summary>
            Enable or disable SSL (only if using non-Amazon storage).
            </summary>
        </member>
        <member name="P:Blobject.AmazonS3.AwsSettings.AccessKey">
            <summary>
            AWS S3 access key.
            </summary>
        </member>
        <member name="P:Blobject.AmazonS3.AwsSettings.SecretKey">
            <summary>
            AWS S3 secret key.
            </summary>
        </member>
        <member name="P:Blobject.AmazonS3.AwsSettings.Region">
            <summary>
            AWS S3 region.
            </summary>
        </member>
        <member name="P:Blobject.AmazonS3.AwsSettings.AwsRegion">
            <summary>
            AWS region, generated and used internally by the library.
            </summary>
        </member>
        <member name="P:Blobject.AmazonS3.AwsSettings.Bucket">
            <summary>
            AWS S3 bucket.
            </summary>
        </member>
        <member name="P:Blobject.AmazonS3.AwsSettings.BaseUrl">
            <summary>
            Base URL to use for objects, i.e. https://[bucketname].s3.[regionname].amazonaws.com/.
            For non-S3 endpoints, use {bucket} and {key} to indicate where these values should be inserted, i.e. http://{bucket}.[hostname]:[port]/{key} or https://[hostname]:[port]/{bucket}/key.
            </summary>
        </member>
        <member name="M:Blobject.AmazonS3.AwsSettings.#ctor">
            <summary>
            Initialize the object.
            </summary>
        </member>
        <member name="M:Blobject.AmazonS3.AwsSettings.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initialize the object.
            </summary>
            <param name="accessKey">Access key with which to access AWS S3.</param>
            <param name="secretKey">Secret key with which to access AWS S3.</param>
            <param name="region">AWS region.</param>
            <param name="bucket">Bucket in which to store BLOBs.</param>
        </member>
        <member name="M:Blobject.AmazonS3.AwsSettings.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Initialize the object.
            </summary>
            <param name="accessKey">Access key with which to access AWS S3.</param>
            <param name="secretKey">Secret key with which to access AWS S3.</param>
            <param name="region">AWS region.</param>
            <param name="bucket">Bucket in which to store BLOBs.</param>
            <param name="ssl">Enable or disable SSL.</param> 
        </member>
        <member name="M:Blobject.AmazonS3.AwsSettings.#ctor(System.String,System.Boolean,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initialize the object.
            </summary>
            <param name="endpoint">Override the AWS S3 endpoint (if using non-Amazon storage).  Use the form http://localhost:8000/.</param>
            <param name="ssl">Enable or disable SSL.</param>
            <param name="accessKey">Access key with which to access AWS S3.</param>
            <param name="secretKey">Secret key with which to access AWS S3.</param>
            <param name="region">AWS region.</param>
            <param name="bucket">Bucket in which to store BLOBs.</param>
            <param name="baseUrl">Base URL to use for objects, i.e. https://[bucketname].s3.[regionname].amazonaws.com/.  For non-S3 endpoints, use {bucket} and {key} to indicate where these values should be inserted, i.e. http://{bucket}.[hostname]:[port]/{key} or https://[hostname]:[port]/{bucket}/key.</param>
        </member>
    </members>
</doc>
